<html>
    <head>
    	<style>
            .btn
            {
                padding: 10px;
                font-size: 15px;
                color:white;
                background: #5F9EA0;
                border: none;
                border-radius: 5px;
            }
        </style>
    </head>

    <body style= "background: #708090">
    	<form action="/malware_detection/index.php">
    		<button class="btn btn-default"> Back</button>
    	</form>
    </body>
</html>

<?php
session_start();
session_regenerate_id();
$inactive = 600;

if (!isset($_SESSION['username']))
{
    header("Location:login.php");
}

if (isset($_SESSION['timeout'])) {
    $sessionTTL = time() - $_SESSION['timeout'];
    if ($sessionTTL > $inactive) {
        session_destroy();
        header("location: login.php");
    }
}

$target_dir = "uploads/";
$target_file = $target_dir . basename($_FILES["fileToUpload"]["name"]);
$uploadOk = 1;
$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));
// Check if image file is an actual image or fake image
if(isset($_POST["submit"])) {
  $check = filesize($_FILES["fileToUpload"]["tmp_name"]);
  if($check !== false) {
    echo "File is not empty - " . $check["mime"] . ".";
    $uploadOk = 1;
  } // else {
    // echo "File is not an image.";
    // $uploadOk = 0;
//  }
}

$target_file2 = '"' . $target_file . '"';
$result3 = shell_exec("python checkfileexists.py " . $target_file2);

// Check if file already exists
// if (file_exists($target_file)) {
//     echo "Sorry, file already exists.";
//     $uploadOk = 0;
//   }
//if(isset($_POST["submit"])){
  if($result3 != null){
    echo "Sorry, file exist liao. ";
    $uploadOk = 0;
  }
//}
// Check if $uploadOk is set to 0 by an error
if ($uploadOk == 0) {
    echo "Sorry, your file was not uploaded.";
  // if everything is ok, try to upload file
  } else {
    if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
      echo "The file ". basename( $_FILES["fileToUpload"]["name"]). " has been uploaded.";
      // python script here
      // $result = shell_exec("python scriptMD5.py " . $target_file2);
      // var_dump($result);
      // echo $result;
    } else {
      echo "Sorry, there was an error uploading your file.";
    }
  }
  // $result2 = shell_exec('python scripttry.py ' . 'lime');
  // var_dump($result2);
  // echo $result2;

$result2 = shell_exec("python MD5.py " . $target_file2);
  /*
  PHP code for scanning files for viruses using virustotal.com API
  File coded by Adrian at www.TheWebHelp.com 
  Feel free to edit and redistribute while keeping the above URL. Thank you.
  */
  
//header("Content-Type: text/plain"); 
  
  // edit the virustotal.com api key, get one from the site
  $virustotal_api_key = "ef1bc232a5177271f7e550cc9ab7f7da2a3a064d27c66ee391942021868c1299";
  
  // enter here the path of the file to be scanned
  $file_to_scan = $target_file;
  
  // get the file size in mb, we will use it to know at what url to send for scanning (it's a different URL for over 30MB)
  $file_size_mb = filesize($file_to_scan)/1024/1024;
  
  // calculate a hash of this file, we will use it as an unique ID when quering about this file
  $file_hash = hash('sha256', file_get_contents($file_to_scan));

  $result = "Clean";
  
  
  // [PART 1] hecking if a report for this file already exists (check by providing the file hash (md5/sha1/sha256) 
  // or by providing a scan_id that you receive when posting a new file for scanning
  // !!! NOTE that scan_id is the only one that indicates file is queued/pending, the others will only report once scan is completed !!!
  $report_url = 'https://www.virustotal.com/vtapi/v2/file/report?apikey='.$virustotal_api_key."&resource=".$file_hash;
  
  $api_reply = file_get_contents($report_url);
  
  // convert the json reply to an array of variables
  $api_reply_array = json_decode($api_reply, true);
  
  
  // your resource is queued for analysis
  if($api_reply_array['response_code']==-2){
    echo $api_reply_array['verbose_msg'];
  }
  
  // reply is OK (it contains an antivirus report)
  // use the variables from $api_reply_array to process the antivirus data
  if($api_reply_array['response_code']==1){
    echo "\nWe got an antivirus report, there were ".$api_reply_array['positives']." positives found. Here is the full data: \n\n";
    if($api_reply_array['positives'] >= 1){
        $result = "malware";
   }//else{
    //     $result = "legit";
    // }
    print_r($api_reply_array);
    exit;
  }
  

  
  //[PART 2] a report for this file was not found, upload file for scanning
  if($api_reply_array['response_code']=='0'){
  
    // default url where to post files
    $post_url = 'https://www.virustotal.com/vtapi/v2/file/scan';
  
    // get a special URL for uploading files larger than 32MB (up to 200MB)
    if($file_size_mb >= 32){
      $api_reply = @file_get_contents('https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey='.$virustotal_api_key);
      $api_reply_array = json_decode($api_reply, true);
      if(isset($api_reply_array['upload_url']) and $api_reply_array['upload_url']!=''){
        $post_url = $api_reply_array['upload_url'];
      }
    }
    
    // send a file for checking
  
    // curl will accept an array here too:
    $post['apikey'] = $virustotal_api_key;
    $post['file'] = '@'.$file_to_scan;
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL,$post_url);
    curl_setopt($ch, CURLOPT_POST,1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
    $api_reply = curl_exec ($ch);
    curl_close ($ch);
    
    $api_reply_array = json_decode($api_reply, true);
    
    if($api_reply_array['response_code']==1){
      echo "\nfile queued OK, you can use this scan_id to check the scan progress:\n".$api_reply_array['scan_id'];
      echo "\nor just keep checking using the file hash, but it will only report once it is completed (no 'PENDING/QUEUED' reply will be given).";
    }
  
  }
  $con=mysqli_connect("localhost","root","","malware_detection");
  if(!$con){
      die('Could not connect: ' . mysqli_connect_errno());
  }
  // $actiontype=$_REQUEST["submit"];
  // $get=$actiontype==="actiontype";
  $get=$_REQUEST["submit"];
  
  if($get){
      $id=isset($_REQUEST["id"]);
      //     $file_name=isset($_REQUEST["file_name"]);
      //     $md5=isset($_REQUEST["md5"]);
      $timestamp=isset($_REQUEST["timestamp"]);
      //     $malware=isset($_REQUEST["malware"]);
      
    //   echo "<tr><td>" . $id . "</td><td>" . $target_file . "</td><td>" . $result2 . "</td><td>" .
    //       $timestamp . "</td><td>" . $result . "</td></tr>";
         // echo $get;
          if($get){
              $query=$con->prepare("INSERT INTO history VALUES(?,?,?,?,?)");
              $query->bind_param('sssss', $id, $target_file, $result2, $timestamp, $result);
          }
          
          if($query->execute()){
              echo "Query executed. Database updated.";
          }
          else{
              echo $query->error;
              echo "Error executing query.";
          }
  }

  // echo $target_file2;
  // $result = shell_exec("python scriptMD5.py " . $target_file2);
  // var_dump($result);
  // echo $result;
?>

